name: Build and Deploy Jekyll Site

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: gems-${{ runner.os }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            gems-${{ runner.os }}-

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Check Jekyll configuration
        run: bundle exec jekyll doctor

      - name: Build Jekyll site
        run: bundle exec jekyll build --config _config.yml,_config.production.yml --baseurl "${{ steps.pages.outputs.base_path }}" --verbose
        env:
          JEKYLL_ENV: production

      - name: Check build output
        run: |
          echo "Build completed successfully!"
          echo "Generated files: $(find _site -type f | wc -l)"
          echo "Total site size: $(du -sh _site | cut -f1)"
          ls -la _site/

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
